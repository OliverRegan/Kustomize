# Source: kestra/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kestra-standalone
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/component: standalone
    app.kubernetes.io/instance: kestra
    app.kubernetes.io/version: "0.17.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-0.17.0
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kestra
      app.kubernetes.io/component: standalone
      app.kubernetes.io/instance: kestra
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kestra
        app.kubernetes.io/component: standalone
        app.kubernetes.io/instance: kestra

      annotations:
        checksum/secrets: 4faa3436c5fb38098ed9b887bb2eea31eebd968f5c848b07163d2be2ecc73f32
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      terminationGracePeriodSeconds: 60
      securityContext:
        {}
      containers:
        - name: kestra-standalone
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          image: "kestra/kestra:latest-full"
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - "exec /app/kestra server standalone --worker-thread=128"
          env:
            - name: MICRONAUT_CONFIG_FILES
              value: /app/secrets/application-k8s.yml
          volumeMounts:
            - name: secrets
              mountPath: /app/secrets/
            - name: docker-dind-socket
              mountPath: /dind
            - name: docker-tmp
              mountPath: /tmp/
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 1
            periodSeconds: 1
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 120
          livenessProbe:
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
        - name: kestra-standalone-docker-dind
          image: "docker:dind-rootless"
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=fatal
            - --group=1000
          env:
            - name: DOCKER_HOST
              value: unix:///dind//docker.sock
          securityContext:
            privileged: true
            runAsGroup: 1000
            runAsUser: 1000
          volumeMounts:
            - name: docker-dind-socket
              mountPath: /dind/
            - name: docker-tmp
              mountPath: /tmp/
          resources:
            {}
      volumes:
        - name: secrets
          secret:
            secretName: kestra-secret
            items:
              - key: application-k8s.yml
                path: application-k8s.yml
        - name: docker-dind-socket
          emptyDir: {}
        - name: docker-tmp
          emptyDir: {}
